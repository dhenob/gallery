{"version":3,"sources":["components/ImageCard.js","components/ImageSearch.js","App.js","index.js"],"names":["ImageCard","image","tags","split","className","src","webformatURL","alt","user","views","downloads","likes","map","tag","index","ImageSearch","searchText","useState","text","setText","onSubmit","e","preventDefault","onChange","target","value","type","placeholder","App","images","setImages","isLoading","setIsLoading","term","setTerm","useEffect","fetch","then","res","json","data","hits","catch","err","console","log","length","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uKAwCeA,EAtCG,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAEdC,EAAOD,EAAMC,KAAKC,MAAM,KAE7B,OACE,sBAAKC,UAAU,6CAAf,UACC,qBAAKC,IAAKJ,EAAMK,aAAcC,IAAI,GAAGH,UAAU,WAC9C,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,yCAAf,sBACUH,EAAMO,QAEhB,+BACE,+BACE,6CACCP,EAAMQ,SAET,+BACE,iDACCR,EAAMS,aAET,+BACE,6CACCT,EAAMU,eAIb,qBAAKP,UAAU,YAAf,SACGF,EAAKU,KAAI,SAACC,EAAKC,GAAN,OACT,uBAAkBV,UAAU,2FAA5B,cACGS,IADQC,YCLLC,EAvBK,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WAAgB,EAEbC,mBAAS,IAFI,mBAE9BC,EAF8B,KAExBC,EAFwB,KASpC,OACE,qBAAKf,UAAU,iDAAf,SACC,sBAAMgB,SAPO,SAACC,GACfA,EAAEC,iBAEFN,EAAWE,IAIgBd,UAAU,kBAApC,SACC,sBAAKA,UAAU,6DAAf,UACC,uBAAOmB,SAAU,SAACF,GAAD,OAAMF,EAAQE,EAAEG,OAAOC,QAAQC,KAAK,OAAOtB,UAAU,kHAAkHuB,YAAY,yBACnM,wBAAQvB,UAAU,iIAAiIsB,KAAK,SAAxJ,4BCoBOE,MA9Bf,WAAgB,IAAD,EAEgBX,mBAAS,IAFzB,mBAENY,EAFM,KAEEC,EAFF,OAGsBb,oBAAS,GAH/B,mBAGNc,EAHM,KAGKC,EAHL,OAIUf,mBAAS,IAJnB,mBAINgB,EAJM,KAIAC,EAJA,KAeb,OATAC,qBAAU,WACRC,MAAM,qEAAD,OAAsEH,EAAtE,kCACJI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJV,EAAUU,EAAKC,MACfT,GAAa,MAEdU,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QACzB,CAACV,IAEF,sBAAK7B,UAAU,oBAAf,UACA,cAAC,EAAD,CAAaY,WAAY,SAACE,GAAD,OAAUgB,EAAQhB,OAEzCa,GAA+B,IAAlBF,EAAOiB,QAAgB,oBAAI1C,UAAU,qCAAd,6BAErC2B,EAAY,oBAAI3B,UAAU,qCAAd,wBAAqE,qBAAKA,UAAU,yBAAf,SAC7EyB,EAAOjB,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAA0BA,MAAOA,GAAjBA,EAAM8C,aCxBhCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.45420ce1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ImageCard = ({ image }) => {\r\n\r\n const tags = image.tags.split(',');\r\n\r\n  return (\r\n    <div className=\"max-w-sm rounded overflow-hidden shadow-lg\">\r\n     <img src={image.webformatURL} alt=\"\" className=\"w-full\"/>\r\n      <div className=\"px-6 py-4\">\r\n        <div className=\"font-bold text-purple-500 text-xl mb-2\">\r\n        Photo by {image.user}\r\n        </div>\r\n        <ul>\r\n          <li>\r\n            <strong>Views: </strong>\r\n            {image.views}\r\n          </li>\r\n          <li>\r\n            <strong>Downloads: </strong>\r\n            {image.downloads}\r\n          </li>\r\n          <li>\r\n            <strong>Likes: </strong>\r\n            {image.likes}\r\n          </li>  \r\n        </ul>\r\n      </div>\r\n      <div className=\"px-6 py-4\">\r\n        {tags.map((tag, index) => (\r\n         <span key={index} className=\"inline-block bg-gray-200 rounded-full px-3 py-1 text sm font-semibold text-gray-700 mr-2\">\r\n          #{tag}\r\n        </span>\r\n        ))}\r\n       \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageCard","import React, { useState} from 'react';\r\n\r\nconst ImageSearch = ({searchText}) => {\r\n\r\n  const[text, setText] = useState('');\r\n\r\n  const onSubmit= (e) =>{\r\n    e.preventDefault();\r\n\r\n    searchText(text);\r\n  }\r\n  return (\r\n    <div className=\"max-w-sm rounded overflow-hidden my-10 mx-auto\">\r\n     <form onSubmit={onSubmit} className=\"w-full max-w-sm\">\r\n      <div className=\"flex items-center border-b border-b-2 border-teal-500 py-2\">\r\n       <input onChange={(e)=> setText(e.target.value)} type=\"text\" className=\"appearance-none bg-transparent border-none w-full text-grey-700 mr-3 py-1 px-2 leading-tight focus:outline-none\" placeholder=\"Search Image Term...\"/>\r\n        <button className=\"flex-shrink-0 bg-blue-500 hover:bg-blue-700 border-blue-500 hover:border-bue-700 text-sm border-4 text-white py-1 px-2 rounded\" type=\"submit\">\r\n         Search\r\n        </button>\r\n      </div>\r\n     </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageSearch;\r\n","import React, { useState, useEffect } from 'react';\nimport ImageCard from './components/ImageCard';\nimport ImageSearch from './components/ImageSearch';\n\n\n\nfunction App() {\n\n  const [images, setImages ] = useState([]);\n  const [isLoading, setIsLoading ] = useState(true);\n  const [term, setTerm] =useState('');\n\n  useEffect(() => {\n    fetch(`https://pixabay.com/api/?key=20894532-49dbaeb67c41e6b74bdddaf0a&q=${term}&image_type=photo&pretty=true`)\n    .then(res => res.json())\n    .then(data => {\n      setImages(data.hits);\n      setIsLoading(false);\n    })\n    .catch(err => console.log(err));\n  }, [term]);\n  return (\n    <div className=\"container mx-auto\">\n    <ImageSearch searchText={(text) => setTerm(text)} />\n\n    {!isLoading && images.length === 0 && <h1 className=\"text-5xl text-center mx-auto mt-32\">No Images Found</h1> }\n    \n    {isLoading ? <h1 className=\"text-6xl text-center mx-auto mt-32\">Loading...</h1> : <div className=\"grid grid-cols-3 gap-4\">\n        {images.map(image => (\n          <ImageCard key={image.id} image={image}/>\n        ))}\n      </div>}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/main.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}